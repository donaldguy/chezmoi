{{if not (empty $inputConfig.pinentry.command) -}}
[pinentry]
command = '{{$inputConfig.pinentry.command}}'
options = {{ toJson (default (list "allow-external-password-cache") $inputConfig.pinentry.options) }}
{{- else -}}
# [pinentry]
# command = ''
# options = ['allow-external-password-cache']
{{- end }}

{{if (or (not (empty $inputConfig.awsSecretsManager.region)) (not (empty $inputConfig.awsSecretsManager.profile))) -}}
[awsSecretsManager]
{{- else -}}
# [awsSecretsManager]
{{- end}}
{{if (not (empty $inputConfig.awsSecretsManager.region))} - }
region    = '{{$inputConfig.awsSecretsManager.region}}'
{{- else -}}
# region  = ''
{{- end }}
{{if (not (empty $inputConfig.awsSecretsManager.profile))} - }
profile   = '{{$inputConfig.awsSecretsManager.profile}}'
{{- else -}}
# profile = ''
{{- end }}


{{- if not (empty $inputConfig.azureKeyVault.defaultVault) -}}
[azureKeyVault]
defaultVault = '{{$inputConfig.azureKeyVault.defaultVault}}'
{{- else -}}
# [azureKeyVault]
# defaultVault = ''
{{- end }}

{{ if not (empty $inputConfig.bitwarden.command) -}}
[bitwarden]
command = '{{ $inputConfig.bitwarden.command }}'
{{- else -}}
# [bitwarden]
# command = 'bw'
{{- end }}

{{ if not (empty $inputConfig.bitwardenSecrets.command) -}}
[bitwardenSecrets]
command = '{{ $inputConfig.bitwardenSecrets.command }}'
{{- else -}}
# [bitwardenSecrets]
# command = 'bws'
{{- end }}

{{ if not (empty $inputConfig.dashlane.command) -}}
[dashlane]
command = '{{ $inputConfig.dashlane.command }}'
{{- else -}}
# [dashlane]
# command = 'dcli'
{{- end }}

{{if (or (not (empty $inputConfig.doppler.command)) (not (empty $inputConfig.doppler.project)) (not (empty $inputConfig.doppler.config ))) -}}
[doppler]
{{- else -}}
# [doppler]
{{- end }}
{{if (not (empty $inputConfig.doppler.command)) }}
command = '{{ $inputConfig.doppler.command }}'
{{- else -}}
# command = 'doppler'
{{- end }}
{{if (not (empty $inputConfig.doppler.project)) }}
project   = '{{ $inputConfig.doppler.project }}'
{{- else -}}
# project = ''
{{- end }}
{{if (not (empty $inputConfig.doppler.config)) }}
config    = '{{ $inputConfig.doppler.config }}'
{{- else -}}
# config = ''
{{- end -}}

{{if (or (not (empty $inputConfig.ejson.keyDir)) (not (empty $inputConfig.ejson.key))) -}}
[ejson]
{{- else -}}
# [ejson]
{{- end }}
{{if (not (empty $inputConfig.ejson.keyDir)) -}}
keyDir   = '{{$inputConfig.ejson.keyDir}}'
{{- else -}}
# keyDir = '/opt/ejson/keys'
{{- end }}
{{if (not (empty $inputConfig.ejson.key)) -}}
key     = '{{$$inputConfig.ejson.key}}'
{{- else -}}
# key   = ''
{{- end }}

{{ if not (empty $inputConfig.gopass.command) -}}
[gopass]
command = '{{ $inputConfig.gopass.command }}'
{{- else -}}
# [gopass]
# command = 'gopass'
{{- end }}

{{if (or (not (empty $inputConfig.hcpVaultSecrets.command)) (not (empty $inputConfig.hcpVaultSecrets.applicationName)) (not (empty $inputConfig.hcpVaultSecrets.organizationId )) (not (empty $inputConfig.hcpVaultSecrets.projectId))) -}}
[hcpVaultSecrets]
{{- else -}}
# [hcpVaultSecrets]
{{- end }}
{{if (not (empty $inputConfig.hcpVaultSecrets.command)) -}}
command           = '{{$inputConfig.hcpVaultSecrets.command}}'
{{- else -}}
# command         = 'vlt'
{{- end }}
{{if (not (empty $inputConfig.hcpVaultSecrets.applicationName)) -}}
applicationName   = '{{$inputConfig.hcpVaultSecrets.applicationName}}'
{{- else -}}
# applicationName = ''
{{- end }}
{{if (not (empty $inputConfig.hcpVaultSecrets.organizationId)) -}}
organizationId    = '{{$inputConfig.hcpVaultSecrets.organizationId}}'
{{- else -}}
# organizationId  = ''
{{- end }}
{{if (not (empty $inputConfig.hcpVaultSecrets.projectId)) -}}
projectId         = '{{$inputConfig.hcpVaultSecrets.projectId}}'
{{- else -}}
# projectId       = ''
{{- end }}

{{if (or (not (empty $inputConfig.keepassxc.command)) (not (empty $inputConfig.keepassxc.database)) (not (empty $inputConfig.keepassxc.mode )) (not (empty $inputConfig.keepassxc.prompt))) -}}
[keepassxc]
{{- else -}}
# [keepassxc]
{{- end }}
{{if (not (empty $inputConfig.keepassxc.command)) -}}
command   = '{{ $inputConfig.keepassxc.command }}'
{{- else -}}
# command = 'keepassxc-cli'
{{- end }}
{{if (not (empty $inputConfig.keepassxc.database)) -}}
database   = '{{ $inputConfig.keepassxc.database }}'
{{- else -}}
# database = ''
{{- end }}
{{if (not (empty $inputConfig.keepassxc.mode)) -}}
mode       = '{{ $inputConfig.keepassxc.mode }}'
{{- else -}}
# mode     = 'cache-password'
{{- end }}
{{if (not (empty $inputConfig.keepassxc.prompt)) -}}
mode       = {{ $inputConfig.keepassxc.prompt  | toString }}
{{- else -}}
# prompt   = true
{{- end }}

{{ if not (empty $inputConfig.keeper.command) -}}
[keeper]
command = '{{ $inputConfig.keeper.command }}'
{{- else -}}
# [keeper]
# command = 'keeper'
{{- end }}

{{ if not (empty $inputConfig.lastpass.command) -}}
[lastpass]
command = '{{ $inputConfig.lastpass.command }}'
{{- else -}}
# [lastpass]
# command = 'lpass'
{{- end }}

{{if (or (not (empty $inputConfig.onepassword.command)) (not (empty $inputConfig.onepassword.prompt)) (not (empty $inputConfig.onepassword.mode ))) -}}
[onepassword]
{{- else -}}
# [onepassword]
{{- end }}
{{if (not (empty $inputConfig.onepassword.command)) -}}
command   = '{{$inputConfig.onepassword.command}}'
{{- else -}}
# command = 'op'
{{- end }}
{{if (not (empty $inputConfig.onepassword.prompt)) -}}
prompt   = {{$inputConfig.onepassword.prompt | toString }}
{{- else -}}
# prompt = true
{{- end }}
{{if (not (empty $inputConfig.onepassword.mode)) -}}
mode    = '{{$inputConfig.onepassword.mode }}'
{{- else -}}
# mode  = 'account'
{{- end }}


{{ if not (empty $inputConfig.pass.command) -}}
[pass]
command = '{{ $inputConfig.pass.command }}'
{{- else -}}
# [pass]
# command = 'pass'
{{- end }}

{{if (or (not (empty $inputConfig.passhole.command)) (not (empty $inputConfig.passhole.prompt))) -}}
[passhole]
{{- else -}}
# [passhole]
{{- end }}
{{if (not (empty $inputConfig.passhole.command)) -}}
command   = '{{$inputConfig.passhole.command}}'
{{- else -}}
# command = 'ph'
{{- end }}
{{if (not (empty $inputConfig.passhole.command)) -}}
prompt    = {{$inputConfig.passhole.prompt | toString}}
{{- else -}}
# prompt  = true
{{- end }}

{{ if not (empty $inputConfig.rbw.command) -}}
[rbw]
command = '{{ $inputConfig.rbw.command }}'
{{- else -}}
# [rbw]
# command = 'rbw'
{{- end }}

{{ if not (empty $inputConfig.vault.command) -}}
[vault]
command = '{{ $inputConfig.vault.command }}'
{{- else -}}
# [vault]
# command = 'vault'
{{- end }}